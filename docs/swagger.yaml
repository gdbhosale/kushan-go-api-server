basePath: /
definitions:
  http.SigninRequest:
    properties:
      email:
        description: Signin Email Address
        example: gdb.sci123@gmail.com
        type: string
      password:
        description: Signin Password
        example: "12345678"
        type: string
    type: object
  http.SigninResponse:
    properties:
      email:
        description: User's Email
        example: gdb.sci123@gmail.com
        type: string
      expiresAt:
        description: JWT Token Expiry Time
        example: "2024-05-03T15:34:26.460Z"
        type: string
      id:
        description: User's ID
        example: 1
        type: integer
      name:
        description: User's Name
        example: John Doe
        type: string
      roles:
        description: User Roles
        example:
        - '[''superadmin'']'
        items:
          type: string
        type: array
      token:
        description: JWT Auth Token
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTQ3NTA0NjYsImlkIjoxfQ.sX29VB_6SQH3Kjpggo89M2QqT5A6PAfMz-r1sR7v99M
        type: string
    type: object
  http.SignoutResponse:
    properties:
      message:
        description: Signout Message
        example: User Signed Out
        type: string
    type: object
  internal.ErrorResponse:
    properties:
      message:
        description: Error Message
        example: Server Error
        type: string
    type: object
  internal.User:
    properties:
      createdAt:
        description: Timestamps
        example: "2024-05-03T15:34:26.460Z"
        type: string
      deletedAt:
        description: Deletion time if User is Deleted
        example: "2024-05-03T15:34:26.460Z"
        type: string
      email:
        description: User's Email
        example: johndoe@gmail.com
        type: string
      id:
        description: User's ID
        example: 123
        type: integer
      name:
        description: User's name
        example: John Doe
        type: string
      password:
        description: User's Password
        example: Masked
        type: string
      roles:
        description: User Roles
        example:
        - '[''superadmin'']'
        items:
          type: string
        type: array
      updatedAt:
        description: User's Updation Time
        example: "2024-05-03T15:34:26.460Z"
        type: string
    type: object
host: localhost:8083
info:
  contact:
    email: support@goatadmin.com
    name: GOAT Support
    url: https://goatadmin/support
  description: |-
    This is a API Documentation for GOAT Admin which defines all its API's for Angular Frontend.

    This API provides endpoints to manage users, RBAC, customers and many other standard Modules of CRM (Customer Relationship Management) system. It allows users to create, retrieve, update, and delete various records associated with customers.

    It needs JWT Token based authentication for user access, Modular RBAC, validation of input data, and error handling to ensure data integrity and security.

    The API is designed to be RESTful, using standard HTTP methods (GET, POST, PUT, DELETE) for CRUD operations on resources. Responses are formatted as JSON.
  license:
    name: MIT
    url: https://opensource.org/license/mit
  title: GOAT Admin
  version: 1.0.0
paths:
  /api/v1/auth/signin:
    post:
      consumes:
      - application/json
      description: Sign In API for GOATAdmin
      parameters:
      - description: Signin Credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/http.SigninRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.SigninResponse'
        "400":
          description: Invalid JSON body
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
        "401":
          description: Invalid Bearer Token
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
        "500":
          description: Issue with Data Parsing
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
      summary: Sign In API
      tags:
      - auth
  /api/v1/auth/signout:
    post:
      consumes:
      - application/json
      description: Signout API for GOATAdmin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http.SignoutResponse'
        "500":
          description: Issue with Data Parsing
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
      summary: Signout API
      tags:
      - auth
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Fetch All Users
      parameters:
      - description: Filter by User ID
        in: query
        name: id
        type: integer
      - description: Filter by User Name
        in: query
        name: name
        type: string
      - description: Filter by User Email
        in: query
        name: email
        type: string
      - default: 0
        description: Pagination Offset
        in: query
        name: offset
        type: integer
      - default: 20
        description: Pagination Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/internal.User'
            type: array
        "400":
          description: Invalid JSON body
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
        "401":
          description: Invalid Bearer Token
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
        "404":
          description: Couldn't find users
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
        "417":
          description: Issue with Data Parsing
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
      security:
      - Bearer: []
      summary: Fetch All Users
      tags:
      - users
  /api/v1/users/{id}:
    get:
      consumes:
      - application/json
      description: Fetch User by ID
      parameters:
      - default: 1
        description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/internal.User'
            type: array
        "400":
          description: Invalid JSON body
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
        "401":
          description: Invalid Bearer Token
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
        "404":
          description: User not found
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
        "417":
          description: Issue with Data Parsing
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
        "500":
          description: Server error
          schema:
            $ref: '#/definitions/internal.ErrorResponse'
      security:
      - Bearer: []
      summary: Fetch User by ID
      tags:
      - users
securityDefinitions:
  Bearer:
    description: Enter the token received from Signin API with the `Bearer ` prefix,
      e.g. "Bearer ABcDE12345"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
