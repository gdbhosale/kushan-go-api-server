{
    "swagger": "2.0",
    "info": {
        "description": "This is a API Documentation for GOAT Admin which defines all its API's for Angular Frontend.\n\nThis API provides endpoints to manage users, RBAC, customers and many other standard Modules of CRM (Customer Relationship Management) system. It allows users to create, retrieve, update, and delete various records associated with customers.\n\nIt needs JWT Token based authentication for user access, Modular RBAC, validation of input data, and error handling to ensure data integrity and security.\n\nThe API is designed to be RESTful, using standard HTTP methods (GET, POST, PUT, DELETE) for CRUD operations on resources. Responses are formatted as JSON.",
        "title": "GOAT Admin",
        "contact": {
            "name": "GOAT Support",
            "url": "https://goatadmin/support",
            "email": "support@goatadmin.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/license/mit"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8083",
    "basePath": "/",
    "paths": {
        "/api/v1/auth/signin": {
            "post": {
                "description": "Sign In API for GOATAdmin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign In API",
                "parameters": [
                    {
                        "description": "Signin Credentials",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.SigninRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.SigninResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid JSON body",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid Bearer Token",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Issue with Data Parsing",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/signout": {
            "post": {
                "description": "Signout API for GOATAdmin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Signout API",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.SignoutResponse"
                        }
                    },
                    "500": {
                        "description": "Issue with Data Parsing",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch All Users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Fetch All Users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by User ID",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by User Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by User Email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Pagination Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Pagination Limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid JSON body",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid Bearer Token",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Couldn't find users",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "417": {
                        "description": "Issue with Data Parsing",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch User by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Fetch User by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/internal.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid JSON body",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid Bearer Token",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "417": {
                        "description": "Issue with Data Parsing",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/internal.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.SigninRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "Signin Email Address",
                    "type": "string",
                    "example": "gdb.sci123@gmail.com"
                },
                "password": {
                    "description": "Signin Password",
                    "type": "string",
                    "example": "12345678"
                }
            }
        },
        "http.SigninResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "User's Email",
                    "type": "string",
                    "example": "gdb.sci123@gmail.com"
                },
                "expiresAt": {
                    "description": "JWT Token Expiry Time",
                    "type": "string",
                    "example": "2024-05-03T15:34:26.460Z"
                },
                "id": {
                    "description": "User's ID",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "User's Name",
                    "type": "string",
                    "example": "John Doe"
                },
                "roles": {
                    "description": "User Roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "['superadmin']"
                    ]
                },
                "token": {
                    "description": "JWT Auth Token",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTQ3NTA0NjYsImlkIjoxfQ.sX29VB_6SQH3Kjpggo89M2QqT5A6PAfMz-r1sR7v99M"
                }
            }
        },
        "http.SignoutResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Signout Message",
                    "type": "string",
                    "example": "User Signed Out"
                }
            }
        },
        "internal.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Error Message",
                    "type": "string",
                    "example": "Server Error"
                }
            }
        },
        "internal.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Timestamps",
                    "type": "string",
                    "example": "2024-05-03T15:34:26.460Z"
                },
                "deletedAt": {
                    "description": "Deletion time if User is Deleted",
                    "type": "string",
                    "example": "2024-05-03T15:34:26.460Z"
                },
                "email": {
                    "description": "User's Email",
                    "type": "string",
                    "example": "johndoe@gmail.com"
                },
                "id": {
                    "description": "User's ID",
                    "type": "integer",
                    "example": 123
                },
                "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "description": "User's Password",
                    "type": "string",
                    "example": "Masked"
                },
                "roles": {
                    "description": "User Roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "['superadmin']"
                    ]
                },
                "updatedAt": {
                    "description": "User's Updation Time",
                    "type": "string",
                    "example": "2024-05-03T15:34:26.460Z"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Enter the token received from Signin API with the `Bearer ` prefix, e.g. \"Bearer ABcDE12345\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}